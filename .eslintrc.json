{
  "parser": "@typescript-eslint/parser",
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    }
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json",
    "useJSXTextNode": true
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "airbnb/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended"
  ],
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "rules": {
    "import/prefer-default-export": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-unused-vars": "off",
    "consistent-return": "off",
    "quotes": [
      "error",
      "single"
    ],
    "no-else-return": "off",
    "react/prop-types": "off",
    "no-console": "off",
    "no-underscore-dangle": "off",
    "func-names": "off",
    "no-useless-catch": "off",
    "eqeqeq": "error",
    "no-multi-spaces": "error",
    "radix": "error",
    "lines-between-class-members": "error",
    "no-trailing-spaces": "error",
    "no-var": "error",
    "eol-last": "error",
    "prefer-const": "error",
    "space-in-parens": "error",
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "max-len": [
      "error",
      {
        "code": 170,
        "tabWidth": 4
      }
    ],
    "@typescript-eslint/no-inferrable-types": 0,
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          // add a custom message to help explain why not to use it
          "Foo": "Don't use Far because it is unsafe",
          // add a custom message, AND tell the plugin how to fix it
          "String": {
            "message": "Use string instead",
            "fixWith": "string"
          },
          "{}": false
        }
      }
    ],
    "@typescript-eslint/no-empty-interface":"off",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/jsx-closing-bracket-location": "error"
  }
}